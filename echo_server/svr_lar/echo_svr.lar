import net;

class Client
{
    net.TcpConn sock;

    Client(net.TcpConn sock)
    {
        this.sock = sock;
    }

    public void run()
    {
        var c = nothrow_call([]{
            public void call()
            {
                defer this.sock.close();

                var buf = new char[10000];
                while (true)
                {
                    long recved_size = this.sock.read(buf);
                    if (recved_size == 0)
                    {
                        return;
                    }
                    this.sock.write(buf[: recved_size]);
                }
            }
        });
        if (c !== nil)
        {
            println("client ends with exception [%s], traceback[%s]".(c.throwed().str(), c.traceback()));
        }
        else
        {
            println("client ends");
        }
    }
}

public void main()
{
    net.TcpListener listener = new net.TcpListener(":9999");
    defer listener.close();
    println("server start");
    while (true)
    {
        var c = nothrow_call([]{
            public void call()
            {
                net.TcpConn new_client = listener.accept();
                start_fiber(new Client(new_client));
            }
        });
        if (c !== nil)
        {
            println("accept new client failed [%s][%s]".(c.throwed().str(), c.traceback()));
        }
    }
}
